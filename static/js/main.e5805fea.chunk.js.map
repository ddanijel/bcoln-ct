{"version":3,"sources":["containers/Aux.js","components/ProgressBar.js","components/layout/AppBar.js","ethereum/web3.js","components/layout/Footer.js","containers/Layout.js","ethereum/lotteryFactory.js","ethereum/lottery.js","store/actions/lotteryActionCreators.js","store/actions/actionTypes.js","store/actions/uiActionCreators.js","store/actions/factoryActionCreators.js","components/CurrentLotteryDetails.js","components/ClosedLotteryDialog.js","components/factoryPanel.js","components/LotteryHistoryDetails.js","components/HistoryPage.js","App.js","serviceWorker.js","store/reducers/factoryReducer.js","store/reducers/lotteryReducer.js","store/reducers/uiReducer.js","store/configureStore.js","index.js"],"names":["aux","props","children","withStyles","root","flexGrow","classes","react_default","a","createElement","className","LinearProgress_default","color","styles","grow","menuButton","marginLeft","marginRight","appBar","backgroundColor","web3","withRouter","connect","state","isLoading","ui","dispatch","AppBar_default","position","style","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","react_router_dom","to","textDecoration","components_ProgressBar","theme","footer","padding","concat","spacing","unit","fontSize","align","gutterBottom","component","minHeight","location","pathname","Aux","layout_AppBar","Footer","window","Web3","currentProvider","provider","require","process","undefined","alert","instance","eth","Contract","JSON","parse","LotteryFactory","interface","ethereum_lottery","address","Lottery","setPlayedLottery","lottery","type","getLotteryDetails","_ref6","Object","asyncToGenerator","regenerator_default","mark","_callee6","lotteryInstance","wrap","_context6","prev","next","getLotteryInstance","sent","methods","describeLottery","call","abrupt","stop","_x6","apply","this","arguments","_ref7","_callee7","_context7","_x7","setActiveLottery","uiStartLoading","uiStopLoading","loadFactory","_ref","_callee","factoryDetails","_context","describeFactory","setFactory","t0","console","error","_x","factory","manager","ticketPrice","utils","fromWei","String","maxGuessNumber","hexToNumber","currentLottery","allLotteries","randomNumberGenerator","onPlayedLottery","confirmationNumber","onPickedWinnerSuccess","lotteryAddress","_ref2","_callee2","playedLottery","_context2","closed","playersCount","owner","winNumber","winners","_x2","CurrentLotteryDetails","guessNumber","selectGuessNumberError","totalPrize","_this2","getBalance","then","balance","setState","nextProps","nextContext","_this3","loadActiveLottery","_this$props$lottery","width","TextField_default","disabled","id","classNames","margin","textField","value","fullWidth","InputProps","startAdornment","InputAdornment_default","endAdornment","Component","button","objectSpread","mixins","gutters","paddingTop","paddingBottom","marginTop","ClosedLotteryDialog","handleClose","_this","onCloseClosedLotteryDialog","Dialog_default","open","isClosedLotteryDialogOpen","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","length","Paper_default","elevation","map","winner","index","label","defaultValue","DialogActions_default","Button_default","onClick","React","closedLottery","FactoryPanel","showPickWinnerButton","handleChange","name","event","defineProperty","target","handlePlayLotteryPressed","onPlayLotteryPressed","shouldShowPickWinnerButton","getAccounts","accounts","handlePickWinnerPressed","pickWinner","guessNumbers","i","push","select","onChange","fontWeight","option","MenuItem_default","key","components_CurrentLotteryDetails","components_ClosedLotteryDialog","activeLottery","confirmed","play","send","from","toWei","on","log","Math","random","playLottery","lotteryData","LotteryHistoryDetails","_isMounted","lotteryDetails","HistoryPage","expanded","panel","_this$props","paperRoot","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","secondaryHeading","heading","ExpansionPanelDetails_default","components_LotteryHistoryDetails","typography","pxToRem","flexBasis","flexShrink","palette","text","secondary","App","onAppOpen","containers_Layout","react_router","exact","path","Boolean","hostname","match","initialState","reducer","action","_action$factory","deployedLotteries","toConsumableArray","isPlayLotteryDialogOpen","rootReducer","combineReducers","factoryReducer","lotteryReducer","uiReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","addLoggingToDispatch","store","rawDispatch","group","returnValue","groupEnd","createStore","applyMiddleware","thunk","configureStore","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5805fea.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nfunction ProgressBar(props) {\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"secondary\"/>\n        </div>\n    );\n}\n\nProgressBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ProgressBar);","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport AppBar from '@material-ui/core/AppBar/index';\nimport Toolbar from '@material-ui/core/Toolbar/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport IconButton from '@material-ui/core/IconButton/index';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {connect} from \"react-redux\";\nimport ProgressBar from \"../ProgressBar\";\n\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    appBar: {\n        backgroundColor: 'black',\n    }\n};\n\nfunction ButtonAppBar(props) {\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" style={styles.appBar}>\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        <Link to=\"/bcoln-ct\" style={{color: \"inherit\", textDecoration: \"none\"}}>Blockchain Lottery</Link>\n                    </Typography>\n                    <Link to=\"/history\" style={{color: \"inherit\", textDecoration: \"none\"}}>History</Link>\n                </Toolbar>\n            </AppBar>\n            {props.isLoading ? <ProgressBar/> : null}\n        </div>\n    );\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.ui.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // onOpenCreateLotteryDialog: () => dispatch(uiOpenCreateLotteryDialog())\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ButtonAppBar)));\n","import Web3 from 'web3';\n\n\nlet web3;\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n} else {\n    const HDWalletProvider = require('truffle-hdwallet-provider');\n\n    const provider = new HDWalletProvider(\n        process.env.REACT_APP_ETH_ACCOUNT_SEED_WORDS,\n        process.env.REACT_APP_ETH_REMOTE_NODE_URL\n    );\n\n    web3 = new Web3(provider);\n}\n\nif (web3 === undefined) {\n    alert('Please enable Metamask to continue');\n}\n\nexport default web3;","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {withRouter} from \"react-router-dom\";\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    footer: {\n        backgroundColor: \"black\",\n        // marginTop: theme.spacing.unit,\n        padding: `${theme.spacing.unit * 2}px 0`,\n    },\n});\n\n\nconst footer = (props) => {\n    const {classes} = props;\n\n    return (\n        <footer className={classes.footer}>\n            <Typography style={{fontSize: '1.2rem', color: \"white\"}} variant=\"title\" align=\"center\" gutterBottom>\n                Something about the lottery\n            </Typography>\n            <Typography style={{color: \"white\"}} variant=\"subheading\" align=\"center\" color=\"textSecondary\"\n                        component=\"p\">\n                Contact us...\n            </Typography>\n        </footer>\n    );\n};\n\n\nexport default withRouter(withStyles(styles)(footer));\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\n\nimport Aux from './Aux';\nimport AppBar from '../components/layout/AppBar';\nimport Footer from '../components/layout/Footer';\n\n\nconst Layout = (props) => {\n\n    let style = {minHeight: 'calc(100vh - 110px)'};\n    switch (props.location.pathname) {\n        case '/':\n            style = {minHeight: 'calc(100vh - 95px)'};\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <Aux>\n            <div style={style}>\n                <AppBar/>\n                {props.children}\n            </div>\n            <Footer/>\n        </Aux>\n    );\n};\n\nexport default withRouter(Layout);\n","import web3 from './web3';\nimport LotteryFactory from './build/LotteryFactory';\n\nconst instance = new web3.eth.Contract(\n    JSON.parse(LotteryFactory.interface),\n    // '0x22aC395C525F02D3Add9194B907F3c5DE7978DEF' // address obtained when the sc is deployed\n    // '0x7d0d91ba579e14a19145e3cce8f03d29076b9d82'\n    // '0xd151ee4f8cc9c2c4f89e63e31393f484742877e0'\n    '0xc6822849fab35a0c17321a8b6196c711ebbaabbd'\n);\n\nexport default instance;","import web3 from './web3';\nimport Lottery from './build/Lottery';\n\nexport default address => new web3.eth.Contract(\n    JSON.parse(Lottery.interface),\n    address\n);","import {SET_ACTIVE_LOTTERY_ACTION, SET_CLOSED_LOTTERY_ACTION, SET_LOTTERY_ACTION} from './actionTypes';\nimport {uiStartLoading, uiStopLoading} from \"./uiActionCreators\";\nimport LotteryFactory from \"../../ethereum/lotteryFactory\";\nimport Lottery from \"../../ethereum/lottery\";\nimport web3 from '../../ethereum/web3';\n\n\nexport const loadActiveLottery = address => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        const lottery = await getLotteryDetails(address);\n        const lotteryData = {\n            address: address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3]\n        };\n        dispatch(setActiveLottery(lotteryData));\n        dispatch(uiStopLoading());\n    }\n};\n\n\nexport const loadPlayedLottery = address => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        const lottery = await getLotteryDetails(address);\n        const playedLottery = {\n            address: address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3],\n            winNumber: web3.utils.hexToNumber(lottery[4]),\n            winners: lottery[5]\n        };\n        dispatch(setPlayedLottery(playedLottery));\n        dispatch(uiStopLoading());\n    }\n};\n\n\nexport const setPlayedLottery = lottery => {\n    return {\n        type: SET_CLOSED_LOTTERY_ACTION,\n        lottery\n    }\n};\n\n\n\nexport const fetchDeployedLotteries = () => {\n    return async dispatch => {\n        try {\n            const deployedLotteriesAddresses = await LotteryFactory.methods.getDeployedLotteries().call();\n            dispatch(loadLotteries(deployedLotteriesAddresses));\n        } catch (e) {\n            console.error('Error while fetching deployed lotteries: ', e);\n        }\n    }\n};\n\nexport const loadLotteries = addresses => {\n    return async dispatch => {\n        addresses.forEach(async address => {\n            try {\n                const lottery = await getLotteryDetails(address);\n                const lotteryData = {\n                    address: address,\n                    playersCount: web3.utils.hexToNumber(lottery[0]),\n                    ticketPrice: web3.utils.fromWei(String(lottery[1]), 'ether'),\n                    owner: lottery[2]\n                };\n                dispatch(setLotteryData(lotteryData));\n            } catch (e) {\n                console.error('Error while fetching the lottery data from the address: ', address, e);\n            }\n        });\n    }\n};\n\nconst getLotteryDetails = async (address) => {\n    const lotteryInstance = await getLotteryInstance(address);\n    return await lotteryInstance.methods.describeLottery().call();\n};\n\nconst getLotteryInstance = async (address) => {\n    return await Lottery(address);\n};\n\nexport const setLotteryData = lottery => {\n    return {\n        type: SET_LOTTERY_ACTION,\n        lottery\n    }\n};\n\nexport const setActiveLottery = lottery => {\n    return {\n        type: SET_ACTIVE_LOTTERY_ACTION,\n        lottery\n    }\n};","export const SET_FACTORY_ACTION = 'SET_FACTORY_ACTION';\nexport const ON_PLAYED_LOTTERY_ACTION = 'ON_PLAYED_LOTTERY_ACTION';\nexport const SET_CLOSED_LOTTERY_ACTION = 'SET_CLOSED_LOTTERY_ACTION';\n\n\nexport const UI_START_LOADING_ACTION = 'UI_START_LOADING_ACTION';\nexport const UI_STOP_LOADING_ACTION = 'UI_STOP_LOADING_ACTION';\nexport const OPEN_CLOSED_LOTTERY_DIALOG_ACTION = 'OPEN_CLOSED_LOTTERY_DIALOG_ACTION';\nexport const CLOSE_CLOSED_LOTTERY_DIALOG_ACTION = 'CLOSE_CLOSED_LOTTERY_DIALOG_ACTION';\nexport const CREATE_LOTTERY_ACTION = 'CREATE_LOTTERY_ACTION';\nexport const SET_LOTTERY_ACTION = 'SET_LOTTERY_ACTION';\nexport const OPEN_PLAY_LOTTERY_DIALOG_ACTION = 'OPEN_PLAY_LOTTERY_DIALOG_ACTION';\nexport const CLOSE_PLAY_LOTTERY_DIALOG_ACTION = 'CLOSE_PLAY_LOTTERY_DIALOG_ACTION';\nexport const SET_ACTIVE_LOTTERY_ACTION = 'SET_ACTIVE_LOTTERY_ACTION';","import {\n    CLOSE_CLOSED_LOTTERY_DIALOG_ACTION,\n    CLOSE_PLAY_LOTTERY_DIALOG_ACTION,\n    OPEN_CLOSED_LOTTERY_DIALOG_ACTION,\n    OPEN_PLAY_LOTTERY_DIALOG_ACTION,\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION\n} from './actionTypes';\nimport {setActiveLottery} from \"./lotteryActionCreators\";\n\n\nexport const uiStartLoading = () => {\n    return {\n        type: UI_START_LOADING_ACTION\n    };\n};\n\n\nexport const uiStopLoading = () => {\n    return {\n        type: UI_STOP_LOADING_ACTION\n    };\n};\n\n\nexport const uiOpenPlayedLotteryDialog = () => {\n    return {\n        type: OPEN_CLOSED_LOTTERY_DIALOG_ACTION\n    };\n};\n\nexport const uiCloseClosedLotteryDialog = () => {\n    return {\n        type: CLOSE_CLOSED_LOTTERY_DIALOG_ACTION\n    };\n};\n\nexport const onUiOpenPlayLotteryDialog = lottery => {\n    return dispatch => {\n        dispatch(setActiveLottery(lottery));\n        dispatch(uiOpenPlayLotteryDialog())\n    }\n};\n\nexport const uiOpenPlayLotteryDialog = () => {\n    return {\n        type: OPEN_PLAY_LOTTERY_DIALOG_ACTION\n    };\n};\n\nexport const uiClosePlayLotteryDialog = () => {\n    return {\n        type: CLOSE_PLAY_LOTTERY_DIALOG_ACTION\n    };\n};","import {ON_PLAYED_LOTTERY_ACTION, SET_FACTORY_ACTION} from './actionTypes';\nimport {uiOpenPlayedLotteryDialog, uiStartLoading, uiStopLoading} from \"./uiActionCreators\";\nimport LotteryFactory from \"../../ethereum/lotteryFactory\";\nimport web3 from \"../../ethereum/web3\";\nimport {loadPlayedLottery} from \"./lotteryActionCreators\";\n\n\nexport const loadFactory = () => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        try {\n            const factoryDetails = await LotteryFactory.methods.describeFactory().call();\n            dispatch(setFactory(factoryDetails));\n        } catch (e) {\n            dispatch(uiStopLoading());\n            console.error('Error while fetching deployed lotteries: ', e);\n        }\n        dispatch(uiStopLoading());\n    }\n};\n\nexport const setFactory = factoryDetails => {\n    const factory = {\n        manager: factoryDetails[0],\n        ticketPrice: web3.utils.fromWei(String(factoryDetails[1]), 'ether'),\n        maxGuessNumber: web3.utils.hexToNumber(factoryDetails[2]),\n        currentLottery: factoryDetails[3],\n        allLotteries: factoryDetails[4],\n        randomNumberGenerator: factoryDetails[5]\n    };\n    return {\n        type: SET_FACTORY_ACTION,\n        factory\n    }\n};\n\n\nexport const playLottery = (ticketPrice, guessNumber) => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        let confirmed = false;\n        web3.eth.getAccounts().then(accounts => {\n            LotteryFactory.methods.play(guessNumber).send(\n                {\n                    from: accounts[0],\n                    value: web3.utils.toWei(String(ticketPrice), 'ether')\n                }\n            )\n                .on('error', (error) => {\n                    dispatch(uiStopLoading());\n                    console.log('Error while playing the lottery: ', error)\n                })\n                .on('confirmation', () => {\n                    if (!confirmed) {\n                        confirmed = true;\n                        dispatch(onPlayedLottery(Math.random()));\n                        dispatch(uiStopLoading());\n                    }\n                });\n        });\n\n    }\n};\n\nexport const onPlayedLottery = confirmationNumber => {\n    return {\n        type: ON_PLAYED_LOTTERY_ACTION,\n        confirmationNumber\n    }\n};\n\nexport const pickWinner = lotteryAddress => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        let confirmed = false;\n        web3.eth.getAccounts().then(accounts => {\n            LotteryFactory.methods.pickWinner().send(\n                {\n                    from: accounts[0]\n                }\n            )\n                .on('error', (error) => {\n                    dispatch(uiStopLoading());\n                    console.log('Error while picking the winner: ', error)\n                })\n                .on('confirmation', () => {\n                    if (!confirmed) {\n                        confirmed = true;\n                        dispatch(onPickedWinnerSuccess(lotteryAddress));\n                        dispatch(uiStopLoading());\n                    }\n                });\n        });\n    }\n};\n\nexport const onPickedWinnerSuccess = lotteryAddress => {\n    return dispatch => {\n        dispatch(loadFactory());\n        dispatch(loadPlayedLottery(lotteryAddress));\n        dispatch(uiOpenPlayedLotteryDialog())\n    }\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport web3 from '../ethereum/web3';\nimport LotteryFactory from '../ethereum/lotteryFactory';\nimport {connect} from \"react-redux\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass CurrentLotteryDetails extends Component {\n    state = {\n        guessNumber: -1,\n        selectGuessNumberError: false,\n        totalPrize: ''\n    };\n\n    componentDidMount() {\n        web3.eth.getBalance(LotteryFactory.address)\n            .then(balance => {\n                this.setState({totalPrize: String(balance)})\n            });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.factory !== undefined) {\n            if (this.props.factory.currentLottery === null && nextProps.factory.currentLottery !== null) {\n                this.props.loadActiveLottery(nextProps.factory.currentLottery);\n            }\n        }\n        if (this.props.factory.confirmationNumber !== nextProps.factory.confirmationNumber) {\n            web3.eth.getBalance(LotteryFactory.address)\n                .then(balance => {\n                    this.setState({totalPrize: String(balance)})\n                });\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {address, playersCount} = this.props.lottery;\n\n        return (\n            <div style={{width: '100%'}}>\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={address}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Address</InputAdornment>\n                    }}\n                    style={{width: '90%'}}\n                />\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={playersCount}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Player Count</InputAdornment>\n                    }}\n                    style={{width: '40%'}}\n                />\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={web3.utils.fromWei(this.state.totalPrize)}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Total Prize</InputAdornment>,\n                        endAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                    }}\n                    style={{width: '90%'}}\n                />\n            </div>\n        );\n    }\n}\n\nCurrentLotteryDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        factory: state.factory\n    };\n};\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(CurrentLotteryDetails));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {connect} from \"react-redux\";\nimport {uiCloseClosedLotteryDialog} from \"../store/actions/uiActionCreators\";\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass ClosedLotteryDialog extends React.Component {\n\n    handleClose = () => {\n        this.props.onCloseClosedLotteryDialog();\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Dialog\n                open={this.props.isClosedLotteryDialogOpen}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">You Picked a Winner</DialogTitle>\n                {this.props.lottery ?\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.playersCount}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Players Count</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.winNumber}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Winning Number</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.winners.length}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Winners Count</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <Paper className={classes.root} elevation={1}>\n                                <Typography variant=\"h5\" component=\"h3\">\n                                    Winners\n                                </Typography>\n                                {this.props.lottery.winners.map((winner, index) => (\n                                    <TextField\n                                        disabled\n                                        id=\"standard-disabled\"\n                                        label={\"Player \" + (index + 1)}\n                                        defaultValue={winner}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        style={{width: '95%'}}\n                                    />\n                                ))}\n                            </Paper>\n\n\n                        </DialogContentText>\n\n                    </DialogContent>\n                    : null}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClosedLotteryDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCloseClosedLotteryDialog: () => dispatch(uiCloseClosedLotteryDialog()),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isClosedLotteryDialogOpen: state.ui.isClosedLotteryDialogOpen,\n        lottery: state.lottery.closedLottery\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClosedLotteryDialog));","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {pickWinner, playLottery} from \"../store/actions/factoryActionCreators\";\nimport {loadActiveLottery} from \"../store/actions/lotteryActionCreators\";\nimport LotteryDetails from \"./CurrentLotteryDetails\";\nimport web3 from '../ethereum/web3'\nimport ClosedLotteryDialog from \"./ClosedLotteryDialog\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass FactoryPanel extends Component {\n    state = {\n        guessNumber: -1,\n        selectGuessNumberError: false,\n        showPickWinnerButton: false\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.factory.currentLottery === null && nextProps.factory.currentLottery !== null) {\n            this.props.loadActiveLottery(nextProps.factory.currentLottery);\n            this.shouldShowPickWinnerButton();\n        }\n        if (this.props.factory.confirmationNumber !== nextProps.factory.confirmationNumber) {\n            this.props.loadActiveLottery(nextProps.factory.currentLottery);\n        }\n    }\n\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n\n    handlePlayLotteryPressed = () => {\n        const {guessNumber} = this.state;\n        const {maxGuessNumber} = this.props.factory;\n\n        if (guessNumber <= maxGuessNumber && guessNumber >= 0) {\n            this.setState({selectGuessNumberError: false});\n            const ticketPrice = this.props.factory.ticketPrice;\n            this.props.onPlayLotteryPressed(ticketPrice, guessNumber);\n        } else {\n            this.setState({selectGuessNumberError: true});\n        }\n    };\n\n    shouldShowPickWinnerButton = () => {\n        // we show the pick winner button just in case we are the manager of the factory\n        web3.eth.getAccounts()\n            .then(accounts => {\n                this.setState({\n                    ...this.state,\n                    showPickWinnerButton: this.props.factory.manager === accounts[0]\n                })\n            })\n    };\n\n    handlePickWinnerPressed = () => {\n        this.props.pickWinner(this.props.factory.currentLottery);\n    };\n\n\n    render() {\n        const {classes} = this.props;\n\n        const guessNumbers = [];\n        for (let i = 0; i <= this.props.factory.maxGuessNumber; i++) {\n            guessNumbers.push({value: i, label: String(\"  \" + i)})\n        }\n\n        return (\n            <div>\n                <Paper className={classes.root} elevation={1}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        Play the lottery\n                    </Typography>\n                    <div style={{width: '100%'}}>\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={this.props.factory.ticketPrice}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Ticket Price</InputAdornment>,\n                                endAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                            }}\n                            style={{width: '90%'}}\n                        />\n                        <TextField\n                            select\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"With Select\"\n                            value={this.state.guessNumber}\n                            error={this.state.selectGuessNumberError}\n                            onChange={this.handleChange('guessNumber')}\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Guess Number</InputAdornment>,\n                            }}\n                            style={{width: '150px', fontWeight: 'bold'}}\n                        >\n                            {guessNumbers.map(option => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n\n                        <Button variant=\"outlined\" className={classes.button} onClick={this.handlePlayLotteryPressed}>\n                            Play\n                        </Button>\n\n                        {\n                            this.state.showPickWinnerButton ?\n                                <Button variant=\"outlined\" className={classes.button}\n                                        onClick={this.handlePickWinnerPressed}>\n                                    Pick Winner\n                                </Button>\n                                : null\n                        }\n\n                    </div>\n                    <Paper className={classes.root} elevation={1}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            Lottery Details\n                        </Typography>\n                        {this.props.currentLottery ? <LotteryDetails lottery={this.props.currentLottery}/> : null}\n                    </Paper>\n\n                </Paper>\n                <ClosedLotteryDialog/>\n            </div>\n        );\n    }\n}\n\nFactoryPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        factory: state.factory,\n        currentLottery: state.lottery.activeLottery\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPlayLotteryPressed: (ticketPrice, guessNumber) => dispatch(playLottery(ticketPrice, guessNumber)),\n        loadActiveLottery: address => dispatch(loadActiveLottery(address)),\n        pickWinner: lotteryAddress => dispatch(pickWinner(lotteryAddress))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FactoryPanel));","import React from 'react';\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Lottery from '../ethereum/lottery';\nimport web3 from \"../ethereum/web3\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass LotteryHistoryDetails extends React.Component {\n    _isMounted = false;\n    state = {\n        lotteryDetails: null\n    };\n\n    async componentDidMount() {\n        this._isMounted = true;\n        const lottery = await Lottery(this.props.address).methods.describeLottery().call();\n        const lotteryDetails = {\n            address: this.props.address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3],\n            winNumber: web3.utils.hexToNumber(lottery[4]),\n            winners: lottery[5]\n        };\n\n        if (this._isMounted) {\n            this.setState({\n                ...this.state,\n                lotteryDetails\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {lotteryDetails} = this.state;\n        return (\n            <div>\n                {this._isMounted === true && lotteryDetails !== null ?\n                    <div>\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.playersCount}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Players Count</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.winNumber}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Winning Number</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.winners.length}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Winners Count</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <Paper className={classes.root} elevation={1}>\n                            <Typography variant=\"h5\" component=\"h3\">\n                                Winners\n                            </Typography>\n                            {lotteryDetails.winners.map((winner, index) => (\n                                <TextField\n                                    disabled\n                                    key={index}\n                                    id=\"standard-disabled\"\n                                    label={\"Player \" + (index + 1)}\n                                    defaultValue={winner}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    style={{width: '95%'}}\n                                />\n                            ))}\n                        </Paper>\n                    </div>\n                    : null}\n            </div>\n        );\n    }\n}\n\nLotteryHistoryDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LotteryHistoryDetails);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport LotteryHistoryDetails from \"./LotteryHistoryDetails\";\n\nconst styles = theme => ({\n    root: {\n        paddingTop: theme.spacing.unit * 2,\n        width: '100%',\n    },\n    paperRoot: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass HistoryPage extends React.Component {\n    state = {\n        expanded: null,\n    };\n\n    handleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    };\n\n    render() {\n        const {classes, allLotteries} = this.props;\n        const {expanded} = this.state;\n\n        return (\n            <Paper className={classes.paperRoot} elevation={1}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Lottery History\n                </Typography>\n                <div className={classes.root}>\n\n                    {allLotteries.map((address, index) => {\n                        return <ExpansionPanel key={index} expanded={expanded === address}\n                                               onChange={this.handleChange(address)}>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                                <Typography className={classes.secondaryHeading}>Address: &nbsp;</Typography>\n                                <Typography className={classes.heading}>{address}</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <LotteryHistoryDetails address={address}/>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    })}\n                </div>\n            </Paper>\n        );\n    }\n}\n\nHistoryPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.ui.isLoading,\n        allLotteries: state.factory.allLotteries\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(withStyles(styles)(HistoryPage)));","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Layout from './containers/Layout';\nimport FactoryPanel from './components/factoryPanel';\nimport HistoryPage from './components/HistoryPage';\n// import LotteriesTable from './components/LotteriesTable'\n// import CreateLotteryDialog from \"./components/CreateLotteryDialog\";\n// import PlayLotteryDialog from \"./components/PlayLotteryDialog\";\nimport {loadFactory} from \"./store/actions/factoryActionCreators\";\nimport {connect} from \"react-redux\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onAppOpen();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Layout>\n                        <Switch>\n                            {/*this is just to make it work on github pages*/}\n                            {/*<Route exact path=\"/\" component={FactoryPanel}/>*/}\n                            <Route exact path=\"/bcoln-ct\" component={FactoryPanel}/>\n                            <Route exact path=\"/history\" component={HistoryPage}/>\n                        </Switch>\n                    </Layout>\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAppOpen: () => dispatch(loadFactory())\n    }\n};\n\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ON_PLAYED_LOTTERY_ACTION, SET_FACTORY_ACTION} from '../actions/actionTypes';\n\nconst initialState = {\n    manager: null,\n    ticketPrice: 0,\n    maxGuessNumber: null,\n    currentLottery: null,\n    allLotteries: [],\n    randomNumberGenerator: null,\n    confirmationNumber: Math.random()\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACTORY_ACTION:\n            const {\n                manager,\n                ticketPrice,\n                maxGuessNumber,\n                currentLottery,\n                allLotteries,\n                randomNumberGenerator\n            } = action.factory;\n            return {\n                ...state,\n                manager,\n                ticketPrice,\n                maxGuessNumber,\n                currentLottery,\n                allLotteries,\n                randomNumberGenerator\n            };\n        case ON_PLAYED_LOTTERY_ACTION:\n            return {\n                ...state,\n                confirmationNumber: action.confirmationNumber\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {\n    CREATE_LOTTERY_ACTION,\n    SET_ACTIVE_LOTTERY_ACTION,\n    SET_CLOSED_LOTTERY_ACTION,\n    SET_LOTTERY_ACTION\n} from '../actions/actionTypes';\n\nconst initialState = {\n    deployedLotteries: [],\n    activeLottery: null,\n    closedLottery: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_LOTTERY_ACTION:\n            return {\n                ...state\n            };\n        case SET_LOTTERY_ACTION:\n            return {\n                ...state,\n                deployedLotteries: [...state.deployedLotteries, action.lottery]\n            };\n        case SET_ACTIVE_LOTTERY_ACTION:\n            return {\n                ...state,\n                activeLottery: action.lottery\n            };\n        case SET_CLOSED_LOTTERY_ACTION:\n            return {\n                ...state,\n                closedLottery: action.lottery\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {\n    CLOSE_CLOSED_LOTTERY_DIALOG_ACTION,\n    CLOSE_PLAY_LOTTERY_DIALOG_ACTION,\n    OPEN_CLOSED_LOTTERY_DIALOG_ACTION,\n    OPEN_PLAY_LOTTERY_DIALOG_ACTION,\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION\n} from '../actions/actionTypes';\n\nconst initialState = {\n    isLoading: false,\n    isClosedLotteryDialogOpen: false,\n    isPlayLotteryDialogOpen: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UI_START_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case UI_STOP_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: false\n            };\n        case OPEN_CLOSED_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isClosedLotteryDialogOpen: true\n            };\n        case CLOSE_CLOSED_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isClosedLotteryDialogOpen: false\n            };\n        case OPEN_PLAY_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isPlayLotteryDialogOpen: true\n            };\n        case CLOSE_PLAY_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isPlayLotteryDialogOpen: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import thunk from \"redux-thunk\";\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\n\nimport factoryReducer from './reducers/factoryReducer';\nimport lotteryReducer from './reducers/lotteryReducer';\nimport uiReducer from './reducers/uiReducer';\n\n\nconst rootReducer = combineReducers({\n    factory: factoryReducer,\n    lottery: lotteryReducer,\n    ui: uiReducer\n\n});\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst addLoggingToDispatch = store => {\n    const rawDispatch = store.dispatch;\n\n    if (!console.group) {\n        return rawDispatch;\n    }\n\n    return action => {\n        // console.group(\"Return action from configure store: \", action.type);\n        // console.log(\"%c prev state\", \"color: gray\", store.getState());\n        // console.log(\"%c action\", \"color: blue\", action);\n        const returnValue = rawDispatch(action);\n        // console.log(\"%c next state\", \"color: green\", store.getState());\n        console.groupEnd(action.type);\n\n        return returnValue;\n    };\n};\n\nexport default function configureStore() {\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n    store.dispatch = addLoggingToDispatch(store);\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nconst app = <Provider store={store}><App/></Provider>;\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}