{"version":3,"sources":["containers/Aux.js","components/ProgressBar.js","components/layout/AppBar.js","ethereum/web3.js","components/layout/Footer.js","containers/Layout.js","ethereum/lotteryFactory.js","ethereum/lottery.js","store/actions/lotteryActionCreators.js","store/actions/uiActionCreators.js","store/actions/actionTypes.js","store/actions/factoryActionCreators.js","components/CurrentLotteryDetails.js","components/ClosedLotteryDialog.js","components/factoryPanel.js","components/LotteryHistoryDetails.js","components/HistoryPage.js","App.js","serviceWorker.js","store/reducers/factoryReducer.js","store/reducers/lotteryReducer.js","store/reducers/uiReducer.js","store/configureStore.js","index.js"],"names":["aux","props","children","withStyles","root","flexGrow","classes","react_default","a","createElement","className","LinearProgress_default","color","styles","grow","menuButton","marginLeft","marginRight","appBar","backgroundColor","web3","withRouter","connect","state","isLoading","ui","dispatch","AppBar_default","position","style","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","react_router_dom","to","textDecoration","components_ProgressBar","theme","footer","padding","concat","spacing","unit","fontSize","align","gutterBottom","component","minHeight","location","pathname","Aux","layout_AppBar","Footer","window","Web3","currentProvider","provider","require","process","undefined","alert","instance","eth","Contract","JSON","parse","LotteryFactory","interface","ethereum_lottery","address","Lottery","loadActiveLottery","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","lottery","lotteryData","wrap","_context","prev","next","type","getLotteryDetails","sent","closed","playersCount","utils","hexToNumber","ticketPrice","fromWei","String","owner","setActiveLottery","stop","_x","apply","this","arguments","setPlayedLottery","_ref3","_callee3","lotteryInstance","_context3","getLotteryInstance","methods","describeLottery","call","abrupt","_x3","_ref4","_callee4","_context4","_x4","loadFactory","factoryDetails","describeFactory","processFactory","t0","console","error","factory","manager","maxGuessNumber","currentLottery","allLotteries","randomNumberGenerator","setFactory","onPlayedLottery","confirmationNumber","onPickedWinnerSuccess","lotteryAddress","_ref2","_callee2","playedLottery","_context2","winNumber","winners","_x2","CurrentLotteryDetails","guessNumber","selectGuessNumberError","totalPrize","_this2","getBalance","then","balance","setState","nextProps","nextContext","_this3","_this$props$lottery","width","TextField_default","disabled","id","classNames","margin","textField","value","fullWidth","InputProps","startAdornment","InputAdornment_default","endAdornment","Component","button","objectSpread","mixins","gutters","paddingTop","paddingBottom","marginTop","ClosedLotteryDialog","handleClose","_this","onCloseClosedLotteryDialog","Dialog_default","open","isClosedLotteryDialogOpen","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","length","Paper_default","elevation","map","winner","index","label","defaultValue","DialogActions_default","Button_default","onClick","React","closedLottery","FactoryPanel","showPickWinnerButton","handleChange","name","event","defineProperty","target","handlePlayLotteryPressed","onPlayLotteryPressed","shouldShowPickWinnerButton","getAccounts","accounts","handlePickWinnerPressed","pickWinner","guessNumbers","i","push","select","onChange","fontWeight","option","MenuItem_default","key","components_CurrentLotteryDetails","components_ClosedLotteryDialog","activeLottery","confirmed","play","send","from","toWei","on","Math","random","playLottery","LotteryHistoryDetails","_isMounted","lotteryDetails","HistoryPage","expanded","panel","_this$props","paperRoot","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","secondaryHeading","heading","ExpansionPanelDetails_default","components_LotteryHistoryDetails","typography","pxToRem","flexBasis","flexShrink","palette","text","secondary","App","onAppOpen","containers_Layout","react_router","exact","path","Boolean","hostname","match","initialState","reducer","action","_action$factory","rootReducer","combineReducers","factoryReducer","lotteryReducer","uiReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","addLoggingToDispatch","store","rawDispatch","group","returnValue","groupEnd","createStore","applyMiddleware","thunk","configureStore","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d56b63af.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nfunction ProgressBar(props) {\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"secondary\"/>\n        </div>\n    );\n}\n\nProgressBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ProgressBar);","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport AppBar from '@material-ui/core/AppBar/index';\nimport Toolbar from '@material-ui/core/Toolbar/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport IconButton from '@material-ui/core/IconButton/index';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {connect} from \"react-redux\";\nimport ProgressBar from \"../ProgressBar\";\n\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    appBar: {\n        backgroundColor: 'black',\n    }\n};\n\nfunction ButtonAppBar(props) {\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" style={styles.appBar}>\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        <Link to=\"/bcoln-ct\" style={{color: \"inherit\", textDecoration: \"none\"}}>Blockchain\n                            Lottery</Link>\n                    </Typography>\n                    <Link to=\"/history\" style={{color: \"inherit\", textDecoration: \"none\"}}>History</Link>\n                </Toolbar>\n            </AppBar>\n            {props.isLoading ? <ProgressBar/> : null}\n        </div>\n    );\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.ui.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // onOpenCreateLotteryDialog: () => dispatch(uiOpenCreateLotteryDialog())\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ButtonAppBar)));\n","import Web3 from 'web3';\n\n\nlet web3;\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n} else {\n    const HDWalletProvider = require('truffle-hdwallet-provider');\n\n    const provider = new HDWalletProvider(\n        process.env.REACT_APP_ETH_ACCOUNT_SEED_WORDS,\n        process.env.REACT_APP_ETH_REMOTE_NODE_URL\n    );\n\n    web3 = new Web3(provider);\n}\n\nif (web3 === undefined) {\n    alert('Please enable Metamask to continue');\n}\n\nexport default web3;","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {withRouter} from \"react-router-dom\";\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    footer: {\n        backgroundColor: \"black\",\n        // marginTop: theme.spacing.unit,\n        padding: `${theme.spacing.unit * 2}px 0`,\n    },\n});\n\n\nconst footer = (props) => {\n    const {classes} = props;\n\n    return (\n        <footer className={classes.footer}>\n            <Typography style={{fontSize: '1.2rem', color: \"white\"}} variant=\"title\" align=\"center\" gutterBottom>\n                Something about the lottery\n            </Typography>\n            <Typography style={{color: \"white\"}} variant=\"subheading\" align=\"center\" color=\"textSecondary\"\n                        component=\"p\">\n                Contact us...\n            </Typography>\n        </footer>\n    );\n};\n\n\nexport default withRouter(withStyles(styles)(footer));\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\n\nimport Aux from './Aux';\nimport AppBar from '../components/layout/AppBar';\nimport Footer from '../components/layout/Footer';\n\n\nconst Layout = (props) => {\n\n    let style = {\n        minHeight: 'calc(100vh - 110px)'\n    };\n    switch (props.location.pathname) {\n        case '/':\n            style = {minHeight: 'calc(100vh - 95px)'};\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <Aux>\n            <div style={style}>\n                <AppBar/>\n                <div className='main-content'>\n                    {props.children}\n                </div>\n            </div>\n            <Footer/>\n        </Aux>\n    );\n};\n\nexport default withRouter(Layout);\n","import web3 from './web3';\nimport LotteryFactory from './build/LotteryFactory';\n\nconst instance = new web3.eth.Contract(\n    JSON.parse(LotteryFactory.interface),\n    // '0x22aC395C525F02D3Add9194B907F3c5DE7978DEF' // address obtained when the sc is deployed\n    // '0x7d0d91ba579e14a19145e3cce8f03d29076b9d82'\n    // '0xd151ee4f8cc9c2c4f89e63e31393f484742877e0'\n    '0xc6822849fab35a0c17321a8b6196c711ebbaabbd'\n);\n\nexport default instance;","import web3 from './web3';\nimport Lottery from './build/Lottery';\n\nexport default address => new web3.eth.Contract(\n    JSON.parse(Lottery.interface),\n    address\n);","import {SET_ACTIVE_LOTTERY_ACTION, SET_CLOSED_LOTTERY_ACTION} from './actionTypes';\nimport {uiStartLoading, uiStopLoading} from \"./uiActionCreators\";\nimport Lottery from \"../../ethereum/lottery\";\nimport web3 from '../../ethereum/web3';\n\n\nexport const loadActiveLottery = address => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        const lottery = await getLotteryDetails(address);\n        const lotteryData = {\n            address: address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3]\n        };\n        dispatch(setActiveLottery(lotteryData));\n        dispatch(uiStopLoading());\n    }\n};\n\n\nexport const loadPlayedLottery = address => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        const lottery = await getLotteryDetails(address);\n        const playedLottery = {\n            address: address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3],\n            winNumber: web3.utils.hexToNumber(lottery[4]),\n            winners: lottery[5]\n        };\n        dispatch(setPlayedLottery(playedLottery));\n        dispatch(uiStopLoading());\n    }\n};\n\n\nexport const setPlayedLottery = lottery => {\n    return {\n        type: SET_CLOSED_LOTTERY_ACTION,\n        lottery\n    }\n};\n\nconst getLotteryDetails = async (address) => {\n    const lotteryInstance = await getLotteryInstance(address);\n    return await lotteryInstance.methods.describeLottery().call();\n};\n\nconst getLotteryInstance = async (address) => {\n    return await Lottery(address);\n};\n\nexport const setActiveLottery = lottery => {\n    return {\n        type: SET_ACTIVE_LOTTERY_ACTION,\n        lottery\n    }\n};","import {\n    CLOSE_CLOSED_LOTTERY_DIALOG_ACTION,\n    OPEN_CLOSED_LOTTERY_DIALOG_ACTION,\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION\n} from './actionTypes';\n\n\nexport const uiStartLoading = () => {\n    return {\n        type: UI_START_LOADING_ACTION\n    };\n};\n\n\nexport const uiStopLoading = () => {\n    return {\n        type: UI_STOP_LOADING_ACTION\n    };\n};\n\n\nexport const uiOpenPlayedLotteryDialog = () => {\n    return {\n        type: OPEN_CLOSED_LOTTERY_DIALOG_ACTION\n    };\n};\n\nexport const uiCloseClosedLotteryDialog = () => {\n    return {\n        type: CLOSE_CLOSED_LOTTERY_DIALOG_ACTION\n    };\n};","export const SET_FACTORY_ACTION = 'SET_FACTORY_ACTION';\nexport const ON_PLAYED_LOTTERY_ACTION = 'ON_PLAYED_LOTTERY_ACTION';\nexport const SET_CLOSED_LOTTERY_ACTION = 'SET_CLOSED_LOTTERY_ACTION';\nexport const UI_START_LOADING_ACTION = 'UI_START_LOADING_ACTION';\nexport const UI_STOP_LOADING_ACTION = 'UI_STOP_LOADING_ACTION';\nexport const OPEN_CLOSED_LOTTERY_DIALOG_ACTION = 'OPEN_CLOSED_LOTTERY_DIALOG_ACTION';\nexport const CLOSE_CLOSED_LOTTERY_DIALOG_ACTION = 'CLOSE_CLOSED_LOTTERY_DIALOG_ACTION';\nexport const SET_ACTIVE_LOTTERY_ACTION = 'SET_ACTIVE_LOTTERY_ACTION';","import {ON_PLAYED_LOTTERY_ACTION, SET_FACTORY_ACTION} from './actionTypes';\nimport {uiOpenPlayedLotteryDialog, uiStartLoading, uiStopLoading} from \"./uiActionCreators\";\nimport LotteryFactory from \"../../ethereum/lotteryFactory\";\nimport web3 from \"../../ethereum/web3\";\nimport {loadActiveLottery, loadPlayedLottery} from \"./lotteryActionCreators\";\n\n\nexport const loadFactory = () => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        try {\n            const factoryDetails = await LotteryFactory.methods.describeFactory().call();\n            dispatch(processFactory(factoryDetails));\n        } catch (e) {\n            dispatch(uiStopLoading());\n            console.error('Error while fetching deployed lotteries: ', e);\n        }\n        dispatch(uiStopLoading());\n    }\n};\n\nexport const processFactory = factoryDetails => {\n    return dispatch => {\n        const factory = {\n            manager: factoryDetails[0],\n            ticketPrice: web3.utils.fromWei(String(factoryDetails[1]), 'ether'),\n            maxGuessNumber: web3.utils.hexToNumber(factoryDetails[2]),\n            currentLottery: factoryDetails[3],\n            allLotteries: factoryDetails[4],\n            randomNumberGenerator: factoryDetails[5]\n        };\n        dispatch(setFactory(factory));\n        dispatch(loadActiveLottery(factory.currentLottery));\n    }\n};\n\nexport const setFactory = factory => {\n\n    return {\n        type: SET_FACTORY_ACTION,\n        factory\n    }\n};\n\n\nexport const playLottery = (activeLottery, ticketPrice, guessNumber) => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        let confirmed = false;\n        web3.eth.getAccounts().then(accounts => {\n            LotteryFactory.methods.play(guessNumber).send(\n                {\n                    from: accounts[0],\n                    value: web3.utils.toWei(String(ticketPrice), 'ether')\n                }\n            )\n                .on('error', (error) => {\n                    dispatch(uiStopLoading());\n                    console.error('Error while playing the lottery: ', error)\n                })\n                .on('confirmation', () => {\n                    if (!confirmed) {\n                        confirmed = true;\n                        dispatch(loadActiveLottery(activeLottery));\n                        dispatch(onPlayedLottery(Math.random()));\n                        dispatch(uiStopLoading());\n                    }\n                });\n        });\n\n    }\n};\n\nexport const onPlayedLottery = confirmationNumber => {\n    return {\n        type: ON_PLAYED_LOTTERY_ACTION,\n        confirmationNumber\n    }\n};\n\nexport const pickWinner = lotteryAddress => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        let confirmed = false;\n        web3.eth.getAccounts().then(accounts => {\n            LotteryFactory.methods.pickWinner().send(\n                {\n                    from: accounts[0]\n                }\n            )\n                .on('error', (error) => {\n                    dispatch(uiStopLoading());\n                    console.error('Error while picking the winner: ', error)\n                })\n                .on('confirmation', () => {\n                    if (!confirmed) {\n                        confirmed = true;\n                        dispatch(onPickedWinnerSuccess(lotteryAddress));\n                        dispatch(uiStopLoading());\n                    }\n                });\n        });\n    }\n};\n\nexport const onPickedWinnerSuccess = lotteryAddress => {\n    return dispatch => {\n        dispatch(loadFactory());\n        dispatch(loadPlayedLottery(lotteryAddress));\n        dispatch(uiOpenPlayedLotteryDialog())\n    }\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport web3 from '../ethereum/web3';\nimport LotteryFactory from '../ethereum/lotteryFactory';\nimport {connect} from \"react-redux\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass CurrentLotteryDetails extends Component {\n    state = {\n        guessNumber: -1,\n        selectGuessNumberError: false,\n        totalPrize: ''\n    };\n\n    componentDidMount() {\n        web3.eth.getBalance(LotteryFactory.address)\n            .then(balance => {\n                this.setState({totalPrize: String(balance)})\n            });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.factory !== undefined) {\n            if (this.props.factory.currentLottery === null && nextProps.factory.currentLottery !== null) {\n                this.props.loadActiveLottery(nextProps.factory.currentLottery);\n            }\n        }\n        if (this.props.factory.confirmationNumber !== nextProps.factory.confirmationNumber) {\n            web3.eth.getBalance(LotteryFactory.address)\n                .then(balance => {\n                    this.setState({totalPrize: String(balance)})\n                });\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {address, playersCount} = this.props.lottery;\n\n        return (\n            <div style={{width: '100%'}}>\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={address}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Address</InputAdornment>\n                    }}\n                    style={{width: '90%'}}\n                />\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={playersCount}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Player Count</InputAdornment>\n                    }}\n                    style={{width: '40%'}}\n                />\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={web3.utils.fromWei(this.state.totalPrize)}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Total Prize</InputAdornment>,\n                        endAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                    }}\n                    style={{width: '90%'}}\n                />\n            </div>\n        );\n    }\n}\n\nCurrentLotteryDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        factory: state.factory\n    };\n};\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(CurrentLotteryDetails));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {connect} from \"react-redux\";\nimport {uiCloseClosedLotteryDialog} from \"../store/actions/uiActionCreators\";\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass ClosedLotteryDialog extends React.Component {\n\n    handleClose = () => {\n        this.props.onCloseClosedLotteryDialog();\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Dialog\n                open={this.props.isClosedLotteryDialogOpen}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">You Picked a Winner</DialogTitle>\n                {this.props.lottery ?\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.playersCount}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Players Count</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.winNumber}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Winning Number</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.winners.length}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Winners Count</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <Paper className={classes.root} elevation={1}>\n                                <Typography variant=\"h5\" component=\"h3\">\n                                    Winners\n                                </Typography>\n                                {this.props.lottery.winners.map((winner, index) => (\n                                    <TextField\n                                        disabled\n                                        id=\"standard-disabled\"\n                                        label={\"Player \" + (index + 1)}\n                                        defaultValue={winner}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        style={{width: '95%'}}\n                                    />\n                                ))}\n                            </Paper>\n\n\n                        </DialogContentText>\n\n                    </DialogContent>\n                    : null}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClosedLotteryDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCloseClosedLotteryDialog: () => dispatch(uiCloseClosedLotteryDialog()),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isClosedLotteryDialogOpen: state.ui.isClosedLotteryDialogOpen,\n        lottery: state.lottery.closedLottery\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClosedLotteryDialog));","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {pickWinner, playLottery} from \"../store/actions/factoryActionCreators\";\nimport {loadActiveLottery} from \"../store/actions/lotteryActionCreators\";\nimport LotteryDetails from \"./CurrentLotteryDetails\";\nimport web3 from '../ethereum/web3'\nimport ClosedLotteryDialog from \"./ClosedLotteryDialog\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass FactoryPanel extends Component {\n    state = {\n        guessNumber: -1,\n        selectGuessNumberError: false,\n        showPickWinnerButton: false\n    };\n\n    componentDidMount() {\n        if (this.props.factory.manager !== null) {\n            this.shouldShowPickWinnerButton();\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.factory.manager !== null) {\n            this.shouldShowPickWinnerButton();\n        }\n    }\n\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n\n    handlePlayLotteryPressed = () => {\n        const {guessNumber} = this.state;\n        const {maxGuessNumber} = this.props.factory;\n\n        if (guessNumber <= maxGuessNumber && guessNumber >= 0) {\n            this.setState({selectGuessNumberError: false});\n            const ticketPrice = this.props.factory.ticketPrice;\n            this.props.onPlayLotteryPressed(this.props.factory.currentLottery, ticketPrice, guessNumber);\n        } else {\n            this.setState({selectGuessNumberError: true});\n        }\n    };\n\n    shouldShowPickWinnerButton = () => {\n        // we show the pick winner button just in case we are the manager of the factory\n        web3.eth.getAccounts()\n            .then(accounts => {\n                this.setState({\n                    ...this.state,\n                    showPickWinnerButton: this.props.factory.manager === accounts[0]\n                })\n            })\n    };\n\n    handlePickWinnerPressed = () => {\n        this.props.pickWinner(this.props.factory.currentLottery);\n    };\n\n\n    render() {\n        const {classes} = this.props;\n\n        const guessNumbers = [];\n        for (let i = 0; i <= this.props.factory.maxGuessNumber; i++) {\n            guessNumbers.push({value: i, label: String(\"  \" + i)})\n        }\n\n        return (\n            <div>\n                <Paper className={classes.root} elevation={1}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        Play the lottery\n                    </Typography>\n                    <div style={{width: '100%'}}>\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={this.props.factory.ticketPrice}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Ticket Price</InputAdornment>,\n                                endAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                            }}\n                            style={{width: '90%'}}\n                        />\n                        <TextField\n                            select\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"With Select\"\n                            value={this.state.guessNumber}\n                            error={this.state.selectGuessNumberError}\n                            onChange={this.handleChange('guessNumber')}\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Guess Number</InputAdornment>,\n                            }}\n                            style={{width: '150px', fontWeight: 'bold'}}\n                        >\n                            {guessNumbers.map(option => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n\n                        <Button disabled={this.props.isLoading} variant=\"outlined\" className={classes.button}\n                                onClick={this.handlePlayLotteryPressed}>\n                            Play\n                        </Button>\n\n                        {\n                            this.state.showPickWinnerButton ?\n                                <Button disabled={this.props.isLoading} variant=\"outlined\" className={classes.button}\n                                        onClick={this.handlePickWinnerPressed}>\n                                    Pick Winner\n                                </Button>\n                                : null\n                        }\n\n                    </div>\n                    <Paper className={classes.root} elevation={1}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            Lottery Details\n                        </Typography>\n                        {this.props.currentLottery ? <LotteryDetails lottery={this.props.currentLottery}/> : null}\n                    </Paper>\n\n                </Paper>\n                <ClosedLotteryDialog/>\n            </div>\n        );\n    }\n}\n\nFactoryPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        factory: state.factory,\n        currentLottery: state.lottery.activeLottery,\n        isLoading: state.ui.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPlayLotteryPressed: (activeLottery, ticketPrice, guessNumber) => dispatch(playLottery(activeLottery, ticketPrice, guessNumber)),\n        loadActiveLottery: address => dispatch(loadActiveLottery(address)),\n        pickWinner: lotteryAddress => dispatch(pickWinner(lotteryAddress))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FactoryPanel));","import React from 'react';\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Lottery from '../ethereum/lottery';\nimport web3 from \"../ethereum/web3\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass LotteryHistoryDetails extends React.Component {\n    _isMounted = false;\n    state = {\n        lotteryDetails: null\n    };\n\n    async componentDidMount() {\n        this._isMounted = true;\n        const lottery = await Lottery(this.props.address).methods.describeLottery().call();\n        const lotteryDetails = {\n            address: this.props.address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3],\n            winNumber: web3.utils.hexToNumber(lottery[4]),\n            winners: lottery[5]\n        };\n\n        if (this._isMounted) {\n            this.setState({\n                ...this.state,\n                lotteryDetails\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {lotteryDetails} = this.state;\n        return (\n            <div>\n                {this._isMounted === true && lotteryDetails !== null ?\n                    <div>\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.playersCount}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Players Count</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.winNumber}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Winning Number</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.winners.length}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Winners Count</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <Paper className={classes.root} elevation={1}>\n                            <Typography variant=\"h5\" component=\"h3\">\n                                Winners\n                            </Typography>\n                            {lotteryDetails.winners.map((winner, index) => (\n                                <TextField\n                                    disabled\n                                    key={index}\n                                    id=\"standard-disabled\"\n                                    label={\"Player \" + (index + 1)}\n                                    defaultValue={winner}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    style={{width: '95%'}}\n                                />\n                            ))}\n                        </Paper>\n                    </div>\n                    : null}\n            </div>\n        );\n    }\n}\n\nLotteryHistoryDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LotteryHistoryDetails);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport LotteryHistoryDetails from \"./LotteryHistoryDetails\";\n\nconst styles = theme => ({\n    root: {\n        paddingTop: theme.spacing.unit * 2,\n        width: '100%',\n    },\n    paperRoot: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass HistoryPage extends React.Component {\n    state = {\n        expanded: null,\n    };\n\n    handleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    };\n\n    render() {\n        const {classes, allLotteries} = this.props;\n        const {expanded} = this.state;\n\n        return (\n            <Paper className={classes.paperRoot} elevation={1}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Lottery History\n                </Typography>\n                <div className={classes.root}>\n\n                    {allLotteries.map((address, index) => {\n                        return <ExpansionPanel key={index} expanded={expanded === address}\n                                               onChange={this.handleChange(address)}>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                                <Typography className={classes.secondaryHeading}>Address: &nbsp;</Typography>\n                                <Typography className={classes.heading}>{address}</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <LotteryHistoryDetails address={address}/>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    })}\n                </div>\n            </Paper>\n        );\n    }\n}\n\nHistoryPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.ui.isLoading,\n        allLotteries: state.factory.allLotteries\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(withStyles(styles)(HistoryPage)));","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Layout from './containers/Layout';\nimport FactoryPanel from './components/factoryPanel';\nimport HistoryPage from './components/HistoryPage';\nimport {loadFactory} from \"./store/actions/factoryActionCreators\";\nimport {connect} from \"react-redux\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onAppOpen();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Layout>\n                        <Switch>\n                            {/*this is just to make it work on github pages*/}\n                            <Route exact path=\"/\" component={FactoryPanel}/>\n                            <Route exact path=\"/bcoln-ct\" component={FactoryPanel}/>\n                            <Route exact path=\"/history\" component={HistoryPage}/>\n                        </Switch>\n                    </Layout>\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAppOpen: () => dispatch(loadFactory())\n    }\n};\n\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ON_PLAYED_LOTTERY_ACTION, SET_FACTORY_ACTION} from '../actions/actionTypes';\n\nconst initialState = {\n    manager: null,\n    ticketPrice: 0,\n    maxGuessNumber: null,\n    currentLottery: null,\n    allLotteries: [],\n    randomNumberGenerator: null,\n    confirmationNumber: Math.random()\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACTORY_ACTION:\n            const {\n                manager,\n                ticketPrice,\n                maxGuessNumber,\n                currentLottery,\n                allLotteries,\n                randomNumberGenerator\n            } = action.factory;\n            return {\n                ...state,\n                manager,\n                ticketPrice,\n                maxGuessNumber,\n                currentLottery,\n                allLotteries,\n                randomNumberGenerator\n            };\n        case ON_PLAYED_LOTTERY_ACTION:\n            return {\n                ...state,\n                confirmationNumber: action.confirmationNumber\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {SET_ACTIVE_LOTTERY_ACTION, SET_CLOSED_LOTTERY_ACTION} from '../actions/actionTypes';\n\nconst initialState = {\n    activeLottery: null,\n    closedLottery: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_LOTTERY_ACTION:\n            return {\n                ...state,\n                activeLottery: action.lottery\n            };\n        case SET_CLOSED_LOTTERY_ACTION:\n            return {\n                ...state,\n                closedLottery: action.lottery\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {\n    CLOSE_CLOSED_LOTTERY_DIALOG_ACTION,\n    OPEN_CLOSED_LOTTERY_DIALOG_ACTION,\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION\n} from '../actions/actionTypes';\n\nconst initialState = {\n    isLoading: false,\n    isClosedLotteryDialogOpen: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UI_START_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case UI_STOP_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: false\n            };\n        case OPEN_CLOSED_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isClosedLotteryDialogOpen: true\n            };\n        case CLOSE_CLOSED_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isClosedLotteryDialogOpen: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import thunk from \"redux-thunk\";\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\n\nimport factoryReducer from './reducers/factoryReducer';\nimport lotteryReducer from './reducers/lotteryReducer';\nimport uiReducer from './reducers/uiReducer';\n\n\nconst rootReducer = combineReducers({\n    factory: factoryReducer,\n    lottery: lotteryReducer,\n    ui: uiReducer\n\n});\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst addLoggingToDispatch = store => {\n    const rawDispatch = store.dispatch;\n\n    if (!console.group) {\n        return rawDispatch;\n    }\n\n    return action => {\n        // console.group(\"Return action from configure store: \", action.type);\n        // console.log(\"%c prev state\", \"color: gray\", store.getState());\n        // console.log(\"%c action\", \"color: blue\", action);\n        const returnValue = rawDispatch(action);\n        // console.log(\"%c next state\", \"color: green\", store.getState());\n        console.groupEnd(action.type);\n\n        return returnValue;\n    };\n};\n\nexport default function configureStore() {\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n    store.dispatch = addLoggingToDispatch(store);\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nconst app = <Provider store={store}><App/></Provider>;\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}