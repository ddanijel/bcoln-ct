{"version":3,"sources":["containers/Aux.js","components/ProgressBar.js","components/layout/AppBar.js","ethereum/web3.js","components/Snackbar.js","store/actions/uiActionCreators.js","store/actions/actionTypes.js","components/layout/Footer.js","containers/Layout.js","ethereum/lotteryFactory.js","ethereum/lottery.js","store/actions/lotteryActionCreators.js","store/actions/factoryActionCreators.js","components/CurrentLotteryDetails.js","components/ClosedLotteryDialog.js","components/factoryPanel.js","components/LotteryHistoryDetails.js","components/HistoryPage.js","App.js","serviceWorker.js","store/reducers/factoryReducer.js","store/reducers/lotteryReducer.js","store/reducers/uiReducer.js","store/configureStore.js","index.js"],"names":["aux","props","children","withStyles","root","flexGrow","classes","react_default","a","createElement","className","LinearProgress_default","color","styles","grow","menuButton","marginLeft","marginRight","appBar","backgroundColor","web3","withRouter","connect","state","isLoading","ui","dispatch","AppBar_default","position","style","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","react_router_dom","to","textDecoration","components_ProgressBar","MainSnackbar","handleClose","_this","onCloseSnackbar","this","Snackbar_default","anchorOrigin","vertical","horizontal","open","snackbar","isOpen","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","href","button","link","target","Button_default","key","size","onClick","text","close","Close_default","React","Component","type","theme","padding","spacing","unit","footer","concat","fontSize","align","gutterBottom","component","components_Snackbar","Aux","minHeight","layout_AppBar","Footer","window","Web3","currentProvider","provider","require","process","undefined","alert","instance","eth","Contract","JSON","parse","LotteryFactory","interface","ethereum_lottery","address","Lottery","loadActiveLottery","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","lottery","lotteryData","wrap","_context","prev","next","getLotteryDetails","sent","closed","playersCount","utils","hexToNumber","ticketPrice","fromWei","String","owner","setActiveLottery","stop","_x","apply","arguments","setPlayedLottery","_ref3","_callee3","lotteryInstance","_context3","getLotteryInstance","methods","describeLottery","call","abrupt","_x3","_ref4","_callee4","_context4","_x4","loadFactory","factoryDetails","describeFactory","processFactory","t0","console","error","factory","manager","maxGuessNumber","currentLottery","allLotteries","randomNumberGenerator","setFactory","onPlayedLottery","confirmationNumber","onPickedWinnerSuccess","lotteryAddress","_ref2","_callee2","playedLottery","_context2","winNumber","winners","_x2","CurrentLotteryDetails","guessNumber","selectGuessNumberError","totalPrize","_this2","getBalance","then","balance","setState","nextProps","nextContext","_this3","_this$props$lottery","width","TextField_default","disabled","classNames","margin","textField","value","fullWidth","InputProps","startAdornment","InputAdornment_default","endAdornment","objectSpread","mixins","gutters","paddingTop","paddingBottom","marginTop","ClosedLotteryDialog","onCloseClosedLotteryDialog","Dialog_default","isClosedLotteryDialogOpen","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","length","Paper_default","elevation","map","winner","index","label","defaultValue","DialogActions_default","closedLottery","FactoryPanel","showPickWinnerButton","handleChange","name","event","defineProperty","handlePlayLotteryPressed","onPlayLotteryPressed","shouldShowPickWinnerButton","getAccounts","accounts","handlePickWinnerPressed","pickWinner","guessNumbers","i","push","select","onChange","fontWeight","option","MenuItem_default","components_CurrentLotteryDetails","components_ClosedLotteryDialog","activeLottery","confirmed","transactonHash","play","send","from","toWei","on","hash","Math","random","uiOpenSnackbar","playLottery","LotteryHistoryDetails","_isMounted","lotteryDetails","HistoryPage","expanded","panel","_this$props","paperRoot","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","secondaryHeading","InputBase_default","ExpansionPanelDetails_default","components_LotteryHistoryDetails","heading","typography","pxToRem","flexBasis","flexShrink","palette","secondary","App","onAppOpen","containers_Layout","react_router","exact","path","Boolean","location","hostname","match","initialState","reducer","_action$factory","rootReducer","combineReducers","factoryReducer","lotteryReducer","uiReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","addLoggingToDispatch","store","rawDispatch","group","returnValue","groupEnd","createStore","applyMiddleware","thunk","configureStore","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae12c413.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nfunction ProgressBar(props) {\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"secondary\"/>\n        </div>\n    );\n}\n\nProgressBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ProgressBar);","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport AppBar from '@material-ui/core/AppBar/index';\nimport Toolbar from '@material-ui/core/Toolbar/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport IconButton from '@material-ui/core/IconButton/index';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {connect} from \"react-redux\";\nimport ProgressBar from \"../ProgressBar\";\n\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    appBar: {\n        backgroundColor: 'black',\n    }\n};\n\nfunction ButtonAppBar(props) {\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" style={styles.appBar}>\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        <Link to=\"/bcoln-ct\" style={{color: \"inherit\", textDecoration: \"none\"}}>Blockchain\n                            Lottery</Link>\n                    </Typography>\n                    <Link to=\"/history\" style={{color: \"inherit\", textDecoration: \"none\"}}>History</Link>\n                </Toolbar>\n            </AppBar>\n            {props.isLoading ? <ProgressBar/> : null}\n        </div>\n    );\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.ui.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // onOpenCreateLotteryDialog: () => dispatch(uiOpenCreateLotteryDialog())\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ButtonAppBar)));\n","import Web3 from 'web3';\n\n\nlet web3;\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n} else {\n    const HDWalletProvider = require('truffle-hdwallet-provider');\n\n    const provider = new HDWalletProvider(\n        process.env.REACT_APP_ETH_ACCOUNT_SEED_WORDS,\n        process.env.REACT_APP_ETH_REMOTE_NODE_URL\n    );\n\n    web3 = new Web3(provider);\n}\n\nif (web3 === undefined) {\n    alert('Please enable Metamask to continue');\n}\n\nexport default web3;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {connect} from \"react-redux\";\nimport {uiCloseSnackbar} from \"../store/actions/uiActionCreators\";\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\nclass MainSnackbar extends React.Component {\n\n    handleClose = () => {\n        this.props.onCloseSnackbar();\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={this.props.snackbar.isOpen}\n                autoHideDuration={15000}\n                onClose={this.handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.props.snackbar.message}</span>}\n                action={[\n                    <a href={this.props.snackbar.button.link} target=\"_blank\">\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n                            {this.props.snackbar.button.text}\n                        </Button>\n                    </a>,\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={this.handleClose}\n                    >\n                        <CloseIcon/>\n                    </IconButton>,\n                ]}\n            />\n        );\n    }\n}\n\nMainSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        snackbar: state.ui.snackbar\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCloseSnackbar: () => dispatch(uiCloseSnackbar())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MainSnackbar));","import {\n    CLOSE_CLOSED_LOTTERY_DIALOG_ACTION,\n    CLOSE_SNACKBAR_ACTION,\n    OPEN_CLOSED_LOTTERY_DIALOG_ACTION,\n    OPEN_SNACKBAR_ACTION,\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION\n} from './actionTypes';\n\n\nexport const uiStartLoading = () => {\n    return {\n        type: UI_START_LOADING_ACTION\n    };\n};\n\n\nexport const uiStopLoading = () => {\n    return {\n        type: UI_STOP_LOADING_ACTION\n    };\n};\n\n\nexport const uiOpenPlayedLotteryDialog = () => {\n    return {\n        type: OPEN_CLOSED_LOTTERY_DIALOG_ACTION\n    };\n};\n\nexport const uiCloseClosedLotteryDialog = () => {\n    return {\n        type: CLOSE_CLOSED_LOTTERY_DIALOG_ACTION\n    };\n};\n\nexport const uiOpenSnackbar = snackbar => {\n    return {\n        type: OPEN_SNACKBAR_ACTION,\n        snackbar\n    }\n};\n\nexport const uiCloseSnackbar = () => {\n    return {\n        type: CLOSE_SNACKBAR_ACTION\n    }\n};","export const SET_FACTORY_ACTION = 'SET_FACTORY_ACTION';\nexport const ON_PLAYED_LOTTERY_ACTION = 'ON_PLAYED_LOTTERY_ACTION';\nexport const SET_CLOSED_LOTTERY_ACTION = 'SET_CLOSED_LOTTERY_ACTION';\nexport const UI_START_LOADING_ACTION = 'UI_START_LOADING_ACTION';\nexport const UI_STOP_LOADING_ACTION = 'UI_STOP_LOADING_ACTION';\nexport const OPEN_CLOSED_LOTTERY_DIALOG_ACTION = 'OPEN_CLOSED_LOTTERY_DIALOG_ACTION';\nexport const CLOSE_CLOSED_LOTTERY_DIALOG_ACTION = 'CLOSE_CLOSED_LOTTERY_DIALOG_ACTION';\nexport const SET_ACTIVE_LOTTERY_ACTION = 'SET_ACTIVE_LOTTERY_ACTION';\nexport const OPEN_SNACKBAR_ACTION = 'OPEN_SNACKBAR_ACTION';\nexport const CLOSE_SNACKBAR_ACTION = 'CLOSE_SNACKBAR_ACTION';","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {withRouter} from \"react-router-dom\";\n\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from \"../Snackbar\";\n\nconst styles = theme => ({\n    footer: {\n        backgroundColor: \"black\",\n        // marginTop: theme.spacing.unit,\n        padding: `${theme.spacing.unit * 2}px 0`,\n    },\n});\n\n\nconst footer = (props) => {\n    const {classes} = props;\n\n    return (\n        <footer className={classes.footer}>\n            <Typography style={{fontSize: '1.2rem', color: \"white\"}} variant=\"title\" align=\"center\" gutterBottom>\n                Something about the lottery\n            </Typography>\n            <Typography style={{color: \"white\"}} variant=\"subheading\" align=\"center\" color=\"textSecondary\"\n                        component=\"p\">\n                Contact us...\n            </Typography>\n            <Snackbar/>\n        </footer>\n    );\n};\n\n\nexport default withRouter(withStyles(styles)(footer));\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport Aux from './Aux';\nimport AppBar from '../components/layout/AppBar';\nimport Footer from '../components/layout/Footer';\n\n\nconst Layout = (props) => {\n\n    let style = {\n        minHeight: 'calc(100vh - 95px)'\n    };\n\n    return (\n        <Aux>\n            <div style={style}>\n                <AppBar/>\n                <div className='main-content'>\n                    {props.children}\n                </div>\n            </div>\n            <Footer/>\n        </Aux>\n    );\n};\n\nexport default withRouter(Layout);\n","import web3 from './web3';\nimport LotteryFactory from './build/LotteryFactory';\n\nconst instance = new web3.eth.Contract(\n    JSON.parse(LotteryFactory.interface),\n    // '0x22aC395C525F02D3Add9194B907F3c5DE7978DEF' // address obtained when the sc is deployed\n    // '0x7d0d91ba579e14a19145e3cce8f03d29076b9d82'\n    // '0xd151ee4f8cc9c2c4f89e63e31393f484742877e0'\n    // '0xc6822849fab35a0c17321a8b6196c711ebbaabbd'\n    // '0x8f2a82701a732d745103e3237d4444fdcefbdbb1'\n    '0x70cffa921f0eac4d968534861e1a2e34afbed1a3'\n);\n\nexport default instance;","import web3 from './web3';\nimport Lottery from './build/Lottery';\n\nexport default address => new web3.eth.Contract(\n    JSON.parse(Lottery.interface),\n    address\n);","import {SET_ACTIVE_LOTTERY_ACTION, SET_CLOSED_LOTTERY_ACTION} from './actionTypes';\nimport {uiStartLoading, uiStopLoading} from \"./uiActionCreators\";\nimport Lottery from \"../../ethereum/lottery\";\nimport web3 from '../../ethereum/web3';\n\n\nexport const loadActiveLottery = address => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        const lottery = await getLotteryDetails(address);\n        const lotteryData = {\n            address: address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3]\n        };\n        dispatch(setActiveLottery(lotteryData));\n        dispatch(uiStopLoading());\n    }\n};\n\n\nexport const loadPlayedLottery = address => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        const lottery = await getLotteryDetails(address);\n        const playedLottery = {\n            address: address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3],\n            winNumber: web3.utils.hexToNumber(lottery[4]),\n            winners: lottery[5]\n        };\n        dispatch(setPlayedLottery(playedLottery));\n        dispatch(uiStopLoading());\n    }\n};\n\n\nexport const setPlayedLottery = lottery => {\n    return {\n        type: SET_CLOSED_LOTTERY_ACTION,\n        lottery\n    }\n};\n\nconst getLotteryDetails = async (address) => {\n    const lotteryInstance = await getLotteryInstance(address);\n    return await lotteryInstance.methods.describeLottery().call();\n};\n\nconst getLotteryInstance = async (address) => {\n    return await Lottery(address);\n};\n\nexport const setActiveLottery = lottery => {\n    return {\n        type: SET_ACTIVE_LOTTERY_ACTION,\n        lottery\n    }\n};","import {ON_PLAYED_LOTTERY_ACTION, SET_FACTORY_ACTION} from './actionTypes';\nimport {uiOpenPlayedLotteryDialog, uiOpenSnackbar, uiStartLoading, uiStopLoading} from \"./uiActionCreators\";\nimport LotteryFactory from \"../../ethereum/lotteryFactory\";\nimport web3 from \"../../ethereum/web3\";\nimport {loadActiveLottery, loadPlayedLottery} from \"./lotteryActionCreators\";\n\n\nexport const loadFactory = () => {\n    return async dispatch => {\n        dispatch(uiStartLoading());\n        try {\n            const factoryDetails = await LotteryFactory.methods.describeFactory().call();\n            dispatch(processFactory(factoryDetails));\n        } catch (e) {\n            dispatch(uiStopLoading());\n            console.error('Error while fetching deployed lotteries: ', e);\n        }\n        dispatch(uiStopLoading());\n    }\n};\n\nexport const processFactory = factoryDetails => {\n    return dispatch => {\n        const factory = {\n            manager: factoryDetails[0],\n            ticketPrice: web3.utils.fromWei(String(factoryDetails[1]), 'ether'),\n            maxGuessNumber: web3.utils.hexToNumber(factoryDetails[2]),\n            currentLottery: factoryDetails[3],\n            allLotteries: factoryDetails[4],\n            randomNumberGenerator: factoryDetails[5]\n        };\n        dispatch(setFactory(factory));\n        dispatch(loadActiveLottery(factory.currentLottery));\n    }\n};\n\nexport const setFactory = factory => {\n\n    return {\n        type: SET_FACTORY_ACTION,\n        factory\n    }\n};\n\n\nexport const playLottery = (activeLottery, ticketPrice, guessNumber) => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        let confirmed = false;\n        let transactonHash = '';\n        web3.eth.getAccounts().then(accounts => {\n            LotteryFactory.methods.play(guessNumber).send(\n                {\n                    from: accounts[0],\n                    value: web3.utils.toWei(String(ticketPrice), 'ether')\n                }\n            )\n                .on('error', (error) => {\n                    dispatch(uiStopLoading());\n                    console.error('Error while playing the lottery: ', error)\n                })\n                .on('transactionHash', hash => {\n                    transactonHash = hash;\n                })\n                .on('confirmation', () => {\n                    if (!confirmed) {\n                        confirmed = true;\n                        dispatch(loadActiveLottery(activeLottery));\n                        dispatch(onPlayedLottery(Math.random()));\n                        dispatch(uiStopLoading());\n                        const snackbar = {\n                            isOpen: true,\n                            message: 'You have played the lottery',\n                            button: {\n                                text: 'View on Etherscan',\n                                link: `https://rinkeby.etherscan.io/tx/${transactonHash}`\n                            }\n                        };\n                        dispatch(uiOpenSnackbar(snackbar));\n                    }\n                })\n            ;\n        });\n\n    }\n};\n\nexport const onPlayedLottery = confirmationNumber => {\n    return {\n        type: ON_PLAYED_LOTTERY_ACTION,\n        confirmationNumber\n    }\n};\n\nexport const pickWinner = lotteryAddress => {\n    return dispatch => {\n        dispatch(uiStartLoading());\n        let confirmed = false;\n        web3.eth.getAccounts().then(accounts => {\n            LotteryFactory.methods.pickWinner().send(\n                {\n                    from: accounts[0]\n                }\n            )\n                .on('error', (error) => {\n                    dispatch(uiStopLoading());\n                    console.error('Error while picking the winner: ', error)\n                })\n                .on('confirmation', () => {\n                    if (!confirmed) {\n                        confirmed = true;\n                        dispatch(onPickedWinnerSuccess(lotteryAddress));\n                        dispatch(uiStopLoading());\n                    }\n                });\n        });\n    }\n};\n\nexport const onPickedWinnerSuccess = lotteryAddress => {\n    return dispatch => {\n        dispatch(loadFactory());\n        dispatch(loadPlayedLottery(lotteryAddress));\n        dispatch(uiOpenPlayedLotteryDialog())\n    }\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport web3 from '../ethereum/web3';\nimport LotteryFactory from '../ethereum/lotteryFactory';\nimport {connect} from \"react-redux\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass CurrentLotteryDetails extends Component {\n    state = {\n        guessNumber: -1,\n        selectGuessNumberError: false,\n        totalPrize: ''\n    };\n\n    componentDidMount() {\n        web3.eth.getBalance(LotteryFactory.address)\n            .then(balance => {\n                this.setState({totalPrize: String(balance)})\n            });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.factory !== undefined) {\n            if (this.props.factory.currentLottery === null && nextProps.factory.currentLottery !== null) {\n                this.props.loadActiveLottery(nextProps.factory.currentLottery);\n            }\n        }\n        if (this.props.factory.confirmationNumber !== nextProps.factory.confirmationNumber) {\n            web3.eth.getBalance(LotteryFactory.address)\n                .then(balance => {\n                    this.setState({totalPrize: String(balance)})\n                });\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {address, playersCount} = this.props.lottery;\n\n        return (\n            <div style={{width: '100%'}}>\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={address}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Address</InputAdornment>\n                    }}\n                    style={{width: '90%'}}\n                />\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={playersCount}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Player Count</InputAdornment>\n                    }}\n                    style={{width: '40%'}}\n                />\n                <TextField\n                    disabled\n                    id=\"ticket\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    // label=\"Ticket Price\"\n                    value={web3.utils.fromWei(this.state.totalPrize)}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Total Prize</InputAdornment>,\n                        endAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                    }}\n                    style={{width: '90%'}}\n                />\n            </div>\n        );\n    }\n}\n\nCurrentLotteryDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        factory: state.factory\n    };\n};\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(CurrentLotteryDetails));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {connect} from \"react-redux\";\nimport {uiCloseClosedLotteryDialog} from \"../store/actions/uiActionCreators\";\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass ClosedLotteryDialog extends React.Component {\n\n    handleClose = () => {\n        this.props.onCloseClosedLotteryDialog();\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Dialog\n                open={this.props.isClosedLotteryDialogOpen}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">You Picked a Winner</DialogTitle>\n                {this.props.lottery ?\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.playersCount}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Players Count</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.winNumber}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Winning Number</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <TextField\n                                disabled\n                                id=\"ticket\"\n                                className={classNames(classes.margin, classes.textField)}\n                                variant=\"outlined\"\n                                // label=\"Ticket Price\"\n                                value={this.props.lottery.winners.length}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Winners Count</InputAdornment>\n                                }}\n                                style={{width: '90%'}}\n                            />\n\n                            <Paper className={classes.root} elevation={1}>\n                                <Typography variant=\"h5\" component=\"h3\">\n                                    Winners\n                                </Typography>\n                                {this.props.lottery.winners.map((winner, index) => (\n                                    <TextField\n                                        disabled\n                                        id=\"standard-disabled\"\n                                        label={\"Player \" + (index + 1)}\n                                        defaultValue={winner}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        style={{width: '95%'}}\n                                    />\n                                ))}\n                            </Paper>\n\n\n                        </DialogContentText>\n\n                    </DialogContent>\n                    : null}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClosedLotteryDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCloseClosedLotteryDialog: () => dispatch(uiCloseClosedLotteryDialog()),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isClosedLotteryDialogOpen: state.ui.isClosedLotteryDialogOpen,\n        lottery: state.lottery.closedLottery\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ClosedLotteryDialog));","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {pickWinner, playLottery} from \"../store/actions/factoryActionCreators\";\nimport {loadActiveLottery} from \"../store/actions/lotteryActionCreators\";\nimport LotteryDetails from \"./CurrentLotteryDetails\";\nimport web3 from '../ethereum/web3'\nimport ClosedLotteryDialog from \"./ClosedLotteryDialog\";\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass FactoryPanel extends Component {\n    state = {\n        guessNumber: -1,\n        selectGuessNumberError: false,\n        showPickWinnerButton: false\n    };\n\n    componentDidMount() {\n        if (this.props.factory.manager !== null) {\n            this.shouldShowPickWinnerButton();\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.factory.manager !== null) {\n            this.shouldShowPickWinnerButton();\n        }\n    }\n\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n\n    handlePlayLotteryPressed = () => {\n        const {guessNumber} = this.state;\n        const {maxGuessNumber} = this.props.factory;\n\n        if (guessNumber <= maxGuessNumber && guessNumber >= 0) {\n            this.setState({selectGuessNumberError: false});\n            const ticketPrice = this.props.factory.ticketPrice;\n            this.props.onPlayLotteryPressed(this.props.factory.currentLottery, ticketPrice, guessNumber);\n        } else {\n            this.setState({selectGuessNumberError: true});\n        }\n    };\n\n    shouldShowPickWinnerButton = () => {\n        // we show the pick winner button just in case we are the manager of the factory\n        web3.eth.getAccounts()\n            .then(accounts => {\n                this.setState({\n                    ...this.state,\n                    showPickWinnerButton: this.props.factory.manager === accounts[0]\n                })\n            })\n    };\n\n    handlePickWinnerPressed = () => {\n        this.props.pickWinner(this.props.factory.currentLottery);\n    };\n\n\n    render() {\n        const {classes} = this.props;\n\n        const guessNumbers = [];\n        for (let i = 0; i <= this.props.factory.maxGuessNumber; i++) {\n            guessNumbers.push({value: i, label: String(\"  \" + i)})\n        }\n\n        return (\n            <div>\n                <Paper className={classes.root} elevation={1}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        Play the lottery\n                    </Typography>\n                    <div style={{width: '100%'}}>\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={this.props.factory.ticketPrice}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Ticket Price</InputAdornment>,\n                                endAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                            }}\n                            style={{width: '90%'}}\n                        />\n                        <TextField\n                            select\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"With Select\"\n                            value={this.state.guessNumber}\n                            error={this.state.selectGuessNumberError}\n                            onChange={this.handleChange('guessNumber')}\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Guess Number</InputAdornment>,\n                            }}\n                            style={{width: '150px', fontWeight: 'bold'}}\n                        >\n                            {guessNumbers.map(option => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n\n                        <Button disabled={this.props.isLoading} variant=\"outlined\" className={classes.button}\n                                onClick={this.handlePlayLotteryPressed}>\n                            Play\n                        </Button>\n\n                        {\n                            this.state.showPickWinnerButton ?\n                                <Button disabled={this.props.isLoading} variant=\"outlined\" className={classes.button}\n                                        onClick={this.handlePickWinnerPressed}>\n                                    Pick Winner\n                                </Button>\n                                : null\n                        }\n\n                    </div>\n                    <Paper className={classes.root} elevation={1}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            Lottery Details\n                        </Typography>\n                        {this.props.currentLottery ? <LotteryDetails lottery={this.props.currentLottery}/> : null}\n                    </Paper>\n\n                </Paper>\n                <ClosedLotteryDialog/>\n            </div>\n        );\n    }\n}\n\nFactoryPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    return {\n        factory: state.factory,\n        currentLottery: state.lottery.activeLottery,\n        isLoading: state.ui.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPlayLotteryPressed: (activeLottery, ticketPrice, guessNumber) => dispatch(playLottery(activeLottery, ticketPrice, guessNumber)),\n        loadActiveLottery: address => dispatch(loadActiveLottery(address)),\n        pickWinner: lotteryAddress => dispatch(pickWinner(lotteryAddress))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FactoryPanel));","import React from 'react';\nimport classNames from \"classnames\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Lottery from '../ethereum/lottery';\nimport web3 from \"../ethereum/web3\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    root: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass LotteryHistoryDetails extends React.Component {\n    _isMounted = false;\n    state = {\n        lotteryDetails: null\n    };\n\n    async componentDidMount() {\n        this._isMounted = true;\n        const lottery = await Lottery(this.props.address).methods.describeLottery().call();\n        const lotteryDetails = {\n            address: this.props.address,\n            closed: lottery[0],\n            playersCount: web3.utils.hexToNumber(lottery[1]),\n            ticketPrice: web3.utils.fromWei(String(lottery[2]), 'ether'),\n            owner: lottery[3],\n            winNumber: web3.utils.hexToNumber(lottery[4]),\n            winners: lottery[5]\n        };\n\n        if (this._isMounted) {\n            this.setState({\n                ...this.state,\n                lotteryDetails\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {lotteryDetails} = this.state;\n        return (\n            <div>\n                {this._isMounted === true && lotteryDetails !== null ?\n                    <div>\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.playersCount}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Players Count</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.winNumber}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Winning Number</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <TextField\n                            disabled\n                            id=\"ticket\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            // label=\"Ticket Price\"\n                            value={lotteryDetails.winners.length}\n                            fullWidth\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">Winners Count</InputAdornment>\n                            }}\n                            style={{width: '90%'}}\n                        />\n\n                        <Paper className={classes.root} elevation={1}>\n                            <Typography variant=\"h5\" component=\"h3\">\n                                Winners\n                            </Typography>\n                            {lotteryDetails.winners.map((winner, index) => (\n                                <TextField\n                                    disabled\n                                    key={index}\n                                    id=\"standard-disabled\"\n                                    label={\"Player \" + (index + 1)}\n                                    defaultValue={winner}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    style={{width: '95%'}}\n                                />\n                            ))}\n                        </Paper>\n                    </div>\n                    : null}\n            </div>\n        );\n    }\n}\n\nLotteryHistoryDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LotteryHistoryDetails);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from \"@material-ui/core/Paper\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport LotteryHistoryDetails from \"./LotteryHistoryDetails\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst styles = theme => ({\n    root: {\n        paddingTop: theme.spacing.unit * 2,\n        width: '100%',\n    },\n    paperRoot: {\n        margin: 10,\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    }\n});\n\nclass HistoryPage extends React.Component {\n    state = {\n        expanded: null,\n    };\n\n    handleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    };\n\n    render() {\n        const {classes, allLotteries} = this.props;\n        const {expanded} = this.state;\n\n        return (\n            <Paper className={classes.paperRoot} elevation={1}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Lottery History\n                </Typography>\n                <div className={classes.root}>\n\n                    {allLotteries.map((address, index) => {\n                        return <ExpansionPanel key={index} expanded={expanded === address}\n                                               onChange={this.handleChange(address)}>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                                <Typography className={classes.secondaryHeading}>Address: &nbsp;</Typography>\n                                <InputBase style={{width: '90%'}} disabled className={classes.margin}\n                                           defaultValue={address}/>\n                                {/*<Typography className={classes.heading}>{address}</Typography>*/}\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <LotteryHistoryDetails address={address}/>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    })}\n                </div>\n            </Paper>\n        );\n    }\n}\n\nHistoryPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.ui.isLoading,\n        allLotteries: state.factory.allLotteries\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(withStyles(styles)(HistoryPage)));","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Layout from './containers/Layout';\nimport FactoryPanel from './components/factoryPanel';\nimport HistoryPage from './components/HistoryPage';\nimport {loadFactory} from \"./store/actions/factoryActionCreators\";\nimport {connect} from \"react-redux\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onAppOpen();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Layout>\n                        <Switch>\n                            <Route exact path=\"/\" component={FactoryPanel}/>\n                            {/*this is just to make it work on github pages*/}\n                            <Route exact path=\"/bcoln-ct\" component={FactoryPanel}/>\n                            <Route exact path=\"/history\" component={HistoryPage}/>\n                        </Switch>\n                    </Layout>\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAppOpen: () => dispatch(loadFactory())\n    }\n};\n\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ON_PLAYED_LOTTERY_ACTION, SET_FACTORY_ACTION} from '../actions/actionTypes';\n\nconst initialState = {\n    manager: null,\n    ticketPrice: 0,\n    maxGuessNumber: null,\n    currentLottery: null,\n    allLotteries: [],\n    randomNumberGenerator: null,\n    confirmationNumber: Math.random()\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACTORY_ACTION:\n            const {\n                manager,\n                ticketPrice,\n                maxGuessNumber,\n                currentLottery,\n                allLotteries,\n                randomNumberGenerator\n            } = action.factory;\n            return {\n                ...state,\n                manager,\n                ticketPrice,\n                maxGuessNumber,\n                currentLottery,\n                allLotteries,\n                randomNumberGenerator\n            };\n        case ON_PLAYED_LOTTERY_ACTION:\n            return {\n                ...state,\n                confirmationNumber: action.confirmationNumber\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {SET_ACTIVE_LOTTERY_ACTION, SET_CLOSED_LOTTERY_ACTION} from '../actions/actionTypes';\n\nconst initialState = {\n    activeLottery: null,\n    closedLottery: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_LOTTERY_ACTION:\n            return {\n                ...state,\n                activeLottery: action.lottery\n            };\n        case SET_CLOSED_LOTTERY_ACTION:\n            return {\n                ...state,\n                closedLottery: action.lottery\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {\n    CLOSE_CLOSED_LOTTERY_DIALOG_ACTION,\n    CLOSE_SNACKBAR_ACTION,\n    OPEN_CLOSED_LOTTERY_DIALOG_ACTION,\n    OPEN_SNACKBAR_ACTION,\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION\n} from '../actions/actionTypes';\n\nconst initialState = {\n    isLoading: false,\n    isClosedLotteryDialogOpen: false,\n    snackbar: {\n        isOpen: false,\n        message: '',\n        button: {\n            text: '',\n            link: ''\n        }\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UI_START_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case UI_STOP_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: false\n            };\n        case OPEN_CLOSED_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isClosedLotteryDialogOpen: true\n            };\n        case CLOSE_CLOSED_LOTTERY_DIALOG_ACTION:\n            return {\n                ...state,\n                isClosedLotteryDialogOpen: false\n            };\n        case OPEN_SNACKBAR_ACTION:\n            return {\n                ...state,\n                snackbar: action.snackbar\n            };\n        case CLOSE_SNACKBAR_ACTION:\n            return {\n                ...state,\n                snackbar: {\n                    isOpen: false,\n                    message: '',\n                    button: {\n                        text: '',\n                        link: ''\n                    }\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import thunk from \"redux-thunk\";\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\n\nimport factoryReducer from './reducers/factoryReducer';\nimport lotteryReducer from './reducers/lotteryReducer';\nimport uiReducer from './reducers/uiReducer';\n\n\nconst rootReducer = combineReducers({\n    factory: factoryReducer,\n    lottery: lotteryReducer,\n    ui: uiReducer\n\n});\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst addLoggingToDispatch = store => {\n    const rawDispatch = store.dispatch;\n\n    if (!console.group) {\n        return rawDispatch;\n    }\n\n    return action => {\n        // console.group(\"Return action from configure store: \", action.type);\n        // console.log(\"%c prev state\", \"color: gray\", store.getState());\n        // console.log(\"%c action\", \"color: blue\", action);\n        const returnValue = rawDispatch(action);\n        // console.log(\"%c next state\", \"color: green\", store.getState());\n        console.groupEnd(action.type);\n\n        return returnValue;\n    };\n};\n\nexport default function configureStore() {\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n    store.dispatch = addLoggingToDispatch(store);\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nconst app = <Provider store={store}><App/></Provider>;\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}